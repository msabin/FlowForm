@use '../../abstracts/variables';
@use 'sass:math';

.cards-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  padding-bottom: 18px;

  label.plan-card {
    border: 2px solid variables.$light-gray;
    padding: 18px;

    display: flex;
    align-items: flex-start;
    gap: 18px;
    cursor: pointer;

    &:hover {
      border-color: variables.$purplish-blue;
    }

    &:has(:checked) {
      border-color: variables.$purplish-blue;
      background-color: variables.$magnolia;
    }

    &:focus-within {
      box-shadow: 0 0 0 2px variables.$light-blue;
    }

    img {
      margin: .25em 0 0 0;
    }

    .plan-title {
      color: variables.$marine-blue;
      font-weight: variables.$medium;
    }

    .plan-price {
      color: variables.$cool-gray;
    }

    .months-free {
      color: variables.$marine-blue;
    }

    .plan-container {
      display: flex;
      flex-direction: column;
    }
  }
}

.toggle-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 25px;

  margin: 18px 0;
  background-color: variables.$magnolia;
  padding: .75em 0;

  font-weight: variables.$medium;
  color: variables.$cool-gray;
  .selected {
    color: variables.$marine-blue;
  }

  button.toggle {
    $slider-size: 12px;

    $container-pad: 5px;
    $container-width: 3.5 * $slider-size;
    $container-height: $slider-size + 2*$container-pad;

    width: $container-width;
    height: $container-height;
    border-radius: math.div($container-height, 2);

    position: relative;

    background-color: variables.$marine-blue;
    cursor: pointer;

    &::before {
      position: absolute;
      left: 0;
      top: 0;
      right: 100%;

      margin: $container-pad;

      display: inline-block;
      content: "";
      width: $slider-size;
      height: $slider-size;
      border-radius: 50%;

      background-color: white;

      transition-duration: 1s;
      transition-property: left;
    }

    &[aria-pressed="false"]::before {
      // Should move to the right of the container, account for 
      // slider size and padding.
      left: $container-width - 2*$container-pad - $slider-size;
    }
  }
}


@media screen and (min-width: variables.$large-breakpoint) {
  .cards-container {
    flex-direction: row;

    label.plan-card {
      flex: 1;
      flex-direction: column;
      align-items: flex-start;
      gap: 28px;
    }
  }
}
